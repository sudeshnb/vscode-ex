{
  "name": "sudesh",
  "displayName": "Clean Flutter Architecture",
  "description": "Folder Create with Bloc, Getx, and Provider, Create dart data classes easily and quickly without writing boilerplate or running code generation.",
  "version": "1.0.9",
  "license": "MIT",
  "pricing": "Free",
  "publisher": "sudeshbandara",
  "repository": {
    "type": "git",
    "url": "https://github.com/sudeshnb/vscode-ex.git"
  },
  "icon": "assets/logo.png",
  "homepage": "https://sudeshnb.xyz",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Snippets",
    "Programming Languages"
  ],
  "keywords": [
    "dart",
    "flutter",
    "angulardart",
    "getx",
    "bloc",
    "state-management"
  ],
  "activationEvents": [
    "onCommand:sudesh.new-bloc",
    "workspaceContains:**/pubspec.yaml",
    "onLanguage:dart",
    "onCommand:sudesh.generate.from_props",
    "onCommand:sudesh.generate.from_json"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sudesh.new-feature",
        "title": "Onyxsio : Generator feature folder"
      },
      {
        "command": "sudesh.new-core",
        "title": "Onyxsio : Generator core folder"
      },
      {
        "title": "Onyxsio : Generate from class properties",
        "command": "sudesh.props"
      },
      {
        "title": "Onyxsio : Generate from JSON",
        "command": "sudesh.json"
      }
    ],
    "configuration": [
      {
        "title": "Class Generator configuration",
        "properties": {
          "sudesh.quick_fixes": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, enables quick fixes to quickly generate data classes or specific methods only."
          },
          "sudesh.fromMap.default_values": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, checks if a field is null when deserializing and provides a non-null default value."
          },
          "sudesh.constructor.default_values": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, generates default values for the constructor."
          },
          "sudesh.constructor.required": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, generates the @required annotiation to every constructor parameter. Note: The generator wont generate default values for the constructor if enabled!"
          },
          "sudesh.override.manual": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, asks, when overriding a class (running the command on an existing class), for every single function/constructor that needs to be changed whether the generator should override the function or not. This allows you to preserve custom changes you made to the function/constructor that would be otherwise overwritten by the generator."
          },
          "sudesh.ignoreComment.enabled": {
            "type": "string",
            "default": "",
            "description": "Add a analyzer comment for file"
          },
          "sudesh.json.seperate": {
            "type": "string",
            "enum": [
              "ask",
              "seperate",
              "current_file"
            ],
            "default": "ask",
            "description": "Whether to seperate a JSON into multiple files, when the JSON contains nested objects. ask: choose manually every time, seperate: always seperate into multiple files, current_file: always insert all classes into the current file."
          },
          "sudesh.dataClass.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a copyWith function for a data class."
          },
          "sudesh.constructor.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a constructor for a data class."
          },
          "sudesh.copyWith.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a copyWith function for a data class."
          },
          "sudesh.toMap.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a toMap function for a data class."
          },
          "sudesh.fromMap.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a fromMap function for a data class."
          },
          "sudesh.toJson.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a toJson function for a data class."
          },
          "sudesh.fromJson.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a fromJson function for a data class."
          },
          "sudesh.toString.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a toString function for a data class."
          },
          "sudesh.equality.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates an override of the == (equals) operator for a data class."
          },
          "sudesh.hashCode.enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": true,
            "description": "If true, generates a hashCode function for a data class."
          },
          "sudesh.hashCode.use_jenkins": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, uses the Jenkins SMI hash function instead of bitwise operator from dart:ui."
          },
          "sudesh.useEquatable": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, uses equatable for value equality and hashcode."
          },
          "sudesh.useEquatableMixin": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "If true, uses equatableMixin for value equality and hashcode.(dart_data_class_generator.useEquatable must be true)"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.194",
    "@types/mkdirp": "^0.5.1",
    "change-case": "^4.1.2",
    "lodash": "^4.17.21",
    "mkdirp": "^0.5.6",
    "node-fetch": "^3.3.1"
  }
}
